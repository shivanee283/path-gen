"use client";
import { OpenAI } from "openai";
import { useEffect, useState } from "react";

const openai = new OpenAI({
  apiKey: sessionStorage.getItem("apiKey"),
  dangerouslyAllowBrowser: true,
});

async function makeChatRequest(promptInput) {
  return openai.chat.completions.create({
    messages: [{ role: "system", content: promptInput }],
    model: "gpt-3.5-turbo",
  });
}
async function getResult(languages, frameworks) {
  let prompt = `Give me the JSON for an array object called "paths" containing 10 learning paths that suggest the user ways to improve their financial literacy and gain beneficial knowledge about financial topics. Each path should be in the form of objects with the following keys:
"title": A concise title for the learning path.
"description": A brief description of the path and its importance.
"skills": An array of skills (new or existing) that the user will learn or build upon. The user knows [${languages}] language(s).`;

  if (frameworks) {
    prompt += ` The user knows [${frameworks}] frameworks.`;
  }

  return await makeChatRequest(prompt)
    .then((res) => {
      return res.choices[0].message.content;
    })
    .catch((err) => {
      return err;
    });
}

function Loading() {
  return (
    <div
      className="flex flex-col items-center h-full gap-10 justify-center w-full"
      id="mainContent"
    >
      <h1 className="text-3xl font-bold text-center text-gray-900 dark:text-gray-100">
        Generating your personalized learning path 🥳🥳
      </h1>

      <div className="w-full max-w-3xl h-1 rounded-full bg-gradient-to-r from-sky-500 via-purple-500 to-sky-500 bg-[length:200%] loading-animation"></div>
      <div className="flex flex-col gap-2">
        <p className="text-center text-gray-500 dark:text-gray-400 max-w-3xl">
          {" "}
          Please wait while your path is being generated.
        </p>
        <p className="text-center text-gray-500 dark:text-gray-400 max-w-3xl">
          {" "}
          This usually take a while (around 30 seconds). But might end up taking longer. Sit back and relaxx
        </p>
      </div>
    </div>
  );
}

function Result({ paths }) {
  return (
    <div className="text-center text-gray-500 dark:text-gray-400 max-w-3xl w-full h-full flex flex-col gap-6">
      <h1 className="text-3xl font-bold text-center text-gray-900 dark:text-gray-100">
        Hurray!! Have a look 👀
      </h1>
      <p className="text-center text-gray-500 dark:text-gray-400 max-w-3xl">
        {" "}
        These are the paths generated by the AI.
      </p>
      {paths.map((path, index) => (
        <div
          className="flex flex-col max-w-3xl w-full gap-2 bg-gray-200 dark:bg-neutral-950 p-4 rounded-xl border border-gray-400 dark:border-neutral-800"
          key={index}
        >
          <h1 className="text-2xl font-bold text-center text-gray-900 dark:text-gray-100">
            {path.title}
          </h1>
          <p className="text-center text-gray-500 dark:text-gray-400 max-w-3xl">
            {path.description}
          </p>
          <div className="w-full overflow-x-scroll">
            <div className="flex w-fit gap-2 mx-auto">
              {path.skills.map((skill, index) => (
                <p
                  className="bg-gray-100 border border-gray-300 dark:border-neutral-800 dark:bg-neutral-900 px-2 py-1 rounded-lg text-gray-700 dark:text-gray-300 whitespace-nowrap"
                  key={index}
                >
                  {skill}
                </p>
              ))}
            </div>
          </div>
        </div>
      ))}
    </div>
  );
}

export default function Home() {
  const [data, setData] = useState(null);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      if (sessionStorage.getItem("userKnowledge")) {
        try {
          const userKnowledge = JSON.parse(
            sessionStorage.getItem("userKnowledge")
          );
          const result = await getResult(
            userKnowledge.lang,
            userKnowledge.framework
          );
          const parsedResult = JSON.parse(result);
          if (parsedResult) {
            parsedResult.paths.map((path) => [
              path.title,
              path.description,
              path.skills,
            ]); // To test if the result is in the correct format
            setData(parsedResult.paths);
          }
        } catch (err) {
          setError(err);
        }
      }
    };

    fetchData();
  }, []);

  if (error) {
    return (
      <main
        className=" max-w-7xl mx-auto px-8 sm:px-16 w-screen"
        id="mainContent"
      >
        <div className="flex flex-col items-center h-full gap-10 justify-center max-w-3xl mx-auto text-center">
          <h1 className="text-3xl font-bold text-center text-gray-900 dark:text-gray-100">
            There was an error ‼️
          </h1>
          <p className="text-gray-500 dark:text-gray-400">
            There was an unexpected error while getting data from OpenAI. Please
            check your internet connection and try again.
          </p>
          <button
            className="px-12 py-4 rounded-lg text-white dark:text-black bg-black dark:bg-white hover:bg-neutral-800 dark:hover:bg-gray-200 font-bold active:scale-[0.98] active:duration-200 transition"
            onClick={() => {
              window.location.reload();
            }}
          >
            Try Again
          </button>
          <p className="text-gray-500 dark:text-gray-400">
            For more information, open the console. (⌘ + ⌥ + I)
          </p>
        </div>
      </main>
    );
  }

  return (
    <main className=" max-w-7xl mx-auto px-8 sm:px-16 w-screen">
      <div className="flex flex-col items-center h-full gap-10 justify-center">
        {data ? <Result paths={data} /> : <Loading />}
      </div>
    </main>
  );
}
